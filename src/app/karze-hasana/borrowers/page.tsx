import React, { Suspense } from 'react'
import {
	Table,
	TableBody,
	TableCell,
	TableHead,
	TableHeader,
	TableRow,
} from "@/components/ui/table";
import { Button } from "@/components/ui/button"
import Link from 'next/link';
import { LoanIProps, PaymentIProps } from '@/types';
import { unstable_noStore } from 'next/cache';
import { getUser } from './[username]/page';
import { Metadata } from 'next';
import SearchBox from '@/components/SearchBox';
import { getSearchBorrowers } from '@/lib/SearchBorrowers';
import PaginationPart from '@/components/Pagination';

export const dynamic = 'force-dynamic'

export const metadata: Metadata = {
	title: "Borrowers List",
	description: "Generated by Rakibul hasan",
};

function SearchBarFallback() {
	return <>placeholder</>
}

async function duePayment(username: string) {
	unstable_noStore();
	const response = await fetch(`https://arafatfoundation.vercel.app/api/loan_list/${username}`);
	if (!response.ok) {
		throw new Error("Failed to fetch data");
	}
	const paymentList: PaymentIProps[] = await response.json();
	const data: LoanIProps = await getUser(username);

	let indexPaymentString: string[] = ["0"];
	const result = paymentList.forEach((item) => indexPaymentString.push(item.amount));
	let indexPayment = indexPaymentString.map(Number);
	const Amount = indexPayment.reduce((accumulator, currentValue) => accumulator - currentValue, Number(data.balance));
	return `${Amount}`;
}
async function allPayment(username: string) {
	unstable_noStore();
	const response = await fetch(`https://arafatfoundation.vercel.app/api/loan_list/${username}`);
	if (!response.ok) {
		throw new Error("Failed to fetch data");
	}
	const paymentList: PaymentIProps[] = await response.json();
	const data: LoanIProps = await getUser(username);
	let indexPaymentString: string[] = ["0"];
	const result = paymentList.forEach((item) => indexPaymentString.push(item.amount));
	let indexPayment = indexPaymentString.map(Number);
	const Amount = indexPayment.reduce((accumulator, currentValue) => accumulator + currentValue, 0);
	return `${Amount}`;


}

async function BorrowersList({ searchParams }: {
	searchParams?: {
		search?: string,
		page?: string,
	}
}) {
	const query = searchParams?.search || "all";

	try {
		const borrowers = await getSearchBorrowers(query);
		const length = borrowers?.length || 1;


		return (
			<>
				<Table>
					<TableHeader>
						<TableRow>
							<TableHead>CODE</TableHead>
							<TableHead className='w-[300px]'>BORROWERS NAME</TableHead>
							<TableHead>DISBURSED</TableHead>
							<TableHead>RECOVERED</TableHead>
							<TableHead>BALANCE</TableHead>
							<TableHead>DETAILS</TableHead>
						</TableRow>
					</TableHeader>

					<TableBody>
						{
							borrowers.map((item, index: number) => (
								<TableRow key={index}>
									<TableCell className="font-medium">{item?.code}</TableCell>
									<TableCell className="font-medium uppercase">{item?.name}</TableCell>
									<TableCell className="font-medium uppercase" >{item?.balance}</TableCell>
									<TableCell className="font-medium uppercase">{allPayment(item?.username)}</TableCell>
									<TableCell className="font-medium uppercase">{duePayment(item?.username)}</TableCell>
									<TableCell className="font-medium uppercase">
										<Button className='bg-color-sub' size={"sm"} asChild>
											<Link href={`borrowers/${item?.username}`}>details</Link>
										</Button>
									</TableCell>
								</TableRow>
							))
						}
					</TableBody>
				</Table>
				<div className="flex justify-center py-2">
					<PaginationPart data={length} />
				</div>
			</>


		)
	} catch (error) {
		throw new Error("Failed Data fetch");
	}
};



async function page({ searchParams }: {
	searchParams?: {
		search?: string,
		page?: string,
	}
}) {

	return (
		<div className='flex flex-col'>
			<Suspense fallback={<SearchBarFallback />}>
				<SearchBox />
			</Suspense>
			<Suspense fallback={<h2 className=' text-center p-4'>Loading...</h2>} >
				<BorrowersList searchParams={searchParams} />
			</Suspense>
		</div>
	)
}

export default page